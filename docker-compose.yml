version: '3.9'
services:
  # Node App
  auth:
    container_name: auth
    build:
      context: microservice_auth
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - postgres
    networks:
      - app-net
  redis:
    image: redis:latest
    restart: always
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - app-net
    volumes:
      - redis:/data/cache
  # Postgresql
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: microservice_auth
    ports:
      - '5432:5432'
    networks:
      - app-net
    volumes:
      - postgres:/data/db
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-net
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    environment:
      - REDIS_HOST=192.168.100.7:6379
    ports:
      - '8081:8081'
    networks:
      - app-net
  # rabbitmq
  rabbitmq:
    image: "rabbitmq:3-management" 
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      -   rabbitmq:/data/queues
    networks:
      - app-net

# networks
networks:
  app-net:
    driver: bridge
volumes:
  postgres:
  redis:
  rabbitmq:
